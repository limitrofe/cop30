#!/bin/bash
# workflow-s3.sh - Workflow completo para S3 CDN

echo "üöÄ WORKFLOW COMPLETO PARA S3 CDN"
echo "================================="

PROJECT_NAME="dias-perfeitos"
S3_BASE="https://s3.glbimg.com/v1/AUTH_e03f7a1106bb438e970511f892f07c35/g1/${PROJECT_NAME}"

echo "üìç URL Base: ${S3_BASE}"
echo ""

# 1. Fetch dos dados (se necess√°rio)
echo "üì• 1. FETCH DOS DADOS DO GOOGLE DOCS"
echo "-----------------------------------"
if [ ! -z "$1" ]; then
    echo "Executando: npm run fetch $1"
    npm run fetch $1
    echo "‚úÖ Dados atualizados"
else
    echo "‚ÑπÔ∏è Pulando fetch (sem DOC_ID fornecido)"
    echo "  Para atualizar: $0 DOC_ID"
fi
echo ""

# 2. Build
echo "üî® 2. BUILD DO PROJETO"
echo "---------------------"
npm run build
if [ $? -ne 0 ]; then
    echo "‚ùå Falha no build"
    exit 1
fi
echo "‚úÖ Build conclu√≠do"
echo ""

# 3. Fix de URLs absolutas
echo "üîß 3. CORRIGINDO URLs PARA S3"
echo "-----------------------------"
node scripts/fix-absolute-urls.js
if [ $? -ne 0 ]; then
    echo "‚ùå Falha na corre√ß√£o de URLs"
    exit 1
fi
echo "‚úÖ URLs corrigidas para S3"
echo ""

# 4. Verificar estrutura final
echo "üìÅ 4. VERIFICANDO ESTRUTURA FINAL"
echo "--------------------------------"
echo "Arquivos no build/:"
find build/ -type f | head -10
echo ""

echo "üìÑ Verificando URLs no index.html:"
if grep -q "${S3_BASE}" build/index.html; then
    echo "‚úÖ URLs S3 encontradas no index.html"
    echo "Exemplos:"
    grep -o "${S3_BASE}[^\"']*" build/index.html | head -3
else
    echo "‚ö†Ô∏è URLs S3 n√£o encontradas - verificar corre√ß√£o"
fi
echo ""

# 5. Verificar dados
echo "üìä 5. VERIFICANDO DADOS"
echo "----------------------"
if [ -f "build/data/dias-perfeitos.json" ]; then
    echo "‚úÖ Arquivo de dados encontrado: build/data/dias-perfeitos.json"
    DATA_SIZE=$(stat -f%z build/data/dias-perfeitos.json 2>/dev/null || stat -c%s build/data/dias-perfeitos.json 2>/dev/null)
    echo "üìè Tamanho: ${DATA_SIZE} bytes"
    
    # Verificar se tem conte√∫do real
    if grep -q "scrollyframes\|scrollytelling" build/data/dias-perfeitos.json; then
        echo "‚úÖ Componentes de scroll encontrados nos dados"
    else
        echo "‚ö†Ô∏è Componentes de scroll n√£o encontrados - verificar dados"
    fi
else
    echo "‚ùå Arquivo de dados N√ÉO encontrado"
    echo "Arquivos em build/data/:"
    ls -la build/data/ 2>/dev/null || echo "Pasta data/ n√£o existe"
fi
echo ""

# 6. Upload (se script dispon√≠vel)
echo "‚òÅÔ∏è 6. UPLOAD PARA S3"
echo "-------------------"
if [ -f "scripts/upload-globo-storage.js" ]; then
    echo "Executando upload..."
    npm run upload
    if [ $? -eq 0 ]; then
        echo "‚úÖ Upload conclu√≠do"
    else
        echo "‚ö†Ô∏è Upload falhou - verificar credenciais"
    fi
else
    echo "‚ÑπÔ∏è Script de upload n√£o encontrado"
    echo "Manual: Fa√ßa upload da pasta build/ para:"
    echo "   ${S3_BASE}/"
fi
echo ""

# 7. URLs finais
echo "üéØ 7. URLS FINAIS"
echo "----------------"
echo "üìÑ P√°gina principal: ${S3_BASE}/index.html"
echo "üìä Dados JSON: ${S3_BASE}/data/dias-perfeitos.json"
echo "üóÇÔ∏è Assets: ${S3_BASE}/_app/"
echo ""

echo "‚úÖ WORKFLOW CONCLU√çDO!"
echo "====================="
echo ""
echo "üîó Para embed, use: ${S3_BASE}/index.html"
echo "üìã Ou copie o conte√∫do de build/index.html"
echo ""

# 8. Teste r√°pido de URLs
echo "üß™ TESTE R√ÅPIDO"
echo "---------------"
echo "Testando se URLs est√£o corretas no build..."

# Procurar por URLs problem√°ticas
PROBLEMATIC_URLS=$(grep -r "href=\"\.\/" build/ 2>/dev/null | wc -l)
if [ "$PROBLEMATIC_URLS" -gt 0 ]; then
    echo "‚ö†Ô∏è Ainda h√° ${PROBLEMATIC_URLS} URLs relativas problem√°ticas"
    echo "Exemplos:"
    grep -r "href=\"\.\/" build/ | head -3
else
    echo "‚úÖ Nenhuma URL relativa problem√°tica encontrada"
fi

echo ""
echo "üéâ PRONTO PARA USAR!"